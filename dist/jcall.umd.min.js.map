{"version":3,"file":"jcall.umd.min.js","sources":["../src/jcall.js"],"sourcesContent":["function isObjectLiteral(obj) {\r\n  return (\r\n    typeof obj === \"object\" &&\r\n    obj !== null &&\r\n    Object.prototype.toString.call(obj) === \"[object Object]\"\r\n  );\r\n}\r\n\r\nconst METHODS = [\"put\", \"delete\", \"post\", \"get\", \"patch\"];\r\nconst local_noop = () => { }; // no operation fn\r\nconst FETCH_SUPPORT = typeof fetch === \"function\";\r\n\r\nclass FetchError extends Error {\r\n  constructor(message, status, statusText, response) {\r\n    super(message); // Pass the message to the parent (Error) constructor\r\n    this.name = this.constructor.name;\r\n    this.status = status || null;\r\n    this.statusText = statusText || null;\r\n    this.stack = new Error().stack;\r\n    this.response = response;\r\n  }\r\n}\r\n\r\nfunction getHeaders(object) {\r\n  const headers = {};\r\n  if (typeof object === \"string\") {\r\n    // Split headers into an object\r\n    object\r\n      .trim()\r\n      .split(/[\\r\\n]+/)\r\n      .forEach((line) => {\r\n        const parts = line.split(\": \");\r\n        const header = parts.shift();\r\n        const value = parts.join(\": \");\r\n        headers[header.toLowerCase()] = value;\r\n      });\r\n  } else if (object.entries) {\r\n    for (let [key, value] of object.entries()) {\r\n      headers[key] = value;\r\n    }\r\n  }\r\n  return headers;\r\n}\r\n\r\n/**\r\n * @typedef {Object} Headers\r\n * @property {String} cache Optionally identify caching mechanisme, must be one of these:\r\n * ```\r\n * const cacheValue = [\"no-cache\", \"no-store\", \"public\", \"private\", \"max-age=*\"]\r\n * ```\r\n * @property {String} accept Optionally identify the type of response you are expecting\r\n * @property {String} contentType Optionally define the contentType, if data provided not the same as contentType the program will adjust it value!\r\n * @property {String} referer the referer of the request\r\n * @property {String} origin the origin of the request\r\n * @property {String} lang the language of the request\r\n * @property {String} authorize the authorization token to be sent with the request\r\n * @property {Boolean} frame the frame options of the request\r\n * @property {String} cookie the cookie to be sent with the request\r\n * @property {Boolean} nosniff the nosniff options of the request\r\n * @property {Boolean} credentials the credentials to be sent with the request\r\n */\r\n\r\n/**\r\n * @typedef {Object} jcallMapControl\r\n * @property {String} type the request type, either `XHR` or `FETCH` depending on supported mechanism\r\n * @property {XMLHttpRequest} xhr the actual xmlHttpRequest used if any\r\n * @property {(msg: String) => jcallMapControl} abort abort the request\r\n * @property {(headers: Headers) => jcallMapControl} setHeaders Optionally add some headers\r\n * @property {function} progress progress callback\r\n * @property {function(): Promise} launch send the request\r\n * @readonly\r\n */\r\n\r\n/**\r\n * Send a synchronized request for a server backend, allowing you to create user-friendly interaction\r\n * with your different `data sources`.\r\n * @param {Object} options Request different options, please read about jcall requests\r\n * @param {String} options.method The method used in the request one of <`POST`,`GET`,`PUT`,`DELETE`, `PATCH`>\r\n * @param {String} options.api the url of the request\r\n * @param {Object|String} options.data the data to be sent with the request\r\n * @param {Object} [options.headers] Optionally provide some headers for the request, example:\r\n * ```\r\n * const headers = {\r\n * 'Content-Type': 'application/json',\r\n * 'Accept': 'application/json',\r\n * }\r\n * jcall({\r\n *  method: 'post',\r\n *  api: '/api',\r\n *  data: {name: 'john'},\r\n *  headers\r\n * })\r\n * ```\r\n * @param {true} [options.async] Optionally set the request to be asynchronous or not\r\n * @param {String} [options.contentType] Optionally provide the content type of the request\r\n * @param {Number} [options.timeout] Optionally limit the request execution time, you can catch timeout errors using:\r\n *  ```\r\n * jcall(..)\r\n * .then(..)\r\n * .catch((errType,error) => {\r\n * if(errType == 'timeout')\r\n * console.error('timeout error',error)\r\n * })\r\n * ```\r\n * @param {String} [options.csrf] the csrf token to be sent with the request\r\n * @param {Function} [options.progress] the progress of the request\r\n * @param {Function} [options.floaded] the function to be called when the request is loaded\r\n * @returns {control}\r\n */\r\nfunction jcall(api, options) {\r\n  if (!api)\r\n    throw new Error(\"An api/url must be defined to send an jcall request!\");\r\n\r\n  options = options || {};\r\n  let method = (options.method || \"post\").toLowerCase();\r\n  let timeout = options.timeout || null;\r\n  let credentials = options.credentials || false;\r\n  let csrf = options.csrf || jcall.csrf;\r\n  let useXHR = options.useXHR || false;\r\n\r\n  // credentials are required to send cookies for csrf protections\r\n  // so let's activate them\r\n  if (csrf) {\r\n    credentials = true;\r\n  }\r\n\r\n  // auto create preventer\r\n  if (jcall.preventer === true) {\r\n    let div = document.createElement('div');\r\n    // applying some style\r\n    div.style.backgroundColor = \"rgba(0,0,0,.2)\";\r\n    div.style.position = \"fixed\";\r\n    div.style.zIndex = \"10000\";\r\n    div.style.left =\r\n      div.style.top = 0;\r\n    div.style.width =\r\n      div.style.height = \"100%\";\r\n    div.style.display = \"none\";\r\n    div.open = function () {\r\n      this.style.display = \"inline\";\r\n    }\r\n    div.close = function () {\r\n      this.style.display = \"none\";\r\n    }\r\n    jcall.preventer = div;\r\n  }\r\n\r\n  // preparing the outline of the request\r\n  let abortController = new AbortController();\r\n  let request = {\r\n    api,\r\n    method: method && METHODS.indexOf(method) != -1 ? method : \"post\",\r\n    credentials: typeof credentials == \"boolean\" ? credentials : false,\r\n    timeout: timeout\r\n      ? timeout < 10\r\n        ? timeout * 1000\r\n        : timeout < 100\r\n          ? timeout * 100\r\n          : timeout < 1000\r\n            ? timeout * 10\r\n            : timeout\r\n      : 0,\r\n    headers: {\r\n      signal: abortController.signal,\r\n    },\r\n    csrf,\r\n  };\r\n  if (jcall.authorization) request.headers[\"authorize\"] = jcall.authorization;\r\n\r\n  function endStatus(status, statusText, response, reject, resolve) {\r\n    switch (status) {\r\n      case 400:\r\n        reject(\r\n          new FetchError(\r\n            400 + \" - Bad Request: The server couldn't understand the request.\",\r\n            400,\r\n            statusText,\r\n            response\r\n          )\r\n        );\r\n        break;\r\n      case 401:\r\n        reject(\r\n          new FetchError(\r\n            401 +\r\n            \" - Unauthorized: Authentication is required, or the provided credentials are incorrect.\",\r\n            401,\r\n            statusText,\r\n            response\r\n          )\r\n        );\r\n        break;\r\n      case 403:\r\n        reject(\r\n          new FetchError(\r\n            403 +\r\n            \" - Forbidden: The server understood the request, but the user doesn't have permission to perform the action.\",\r\n            403,\r\n            statusText,\r\n            response\r\n          )\r\n        );\r\n        break;\r\n      case 404:\r\n        reject(\r\n          new FetchError(\r\n            404 +\r\n            \" - Not Found: The requested resource could not be found on the server.\",\r\n            404,\r\n            statusText,\r\n            response\r\n          )\r\n        );\r\n        break;\r\n      case 500:\r\n        reject(\r\n          new FetchError(\r\n            500 +\r\n            \" - Internal Server Error: The server encountered an unexpected condition.\",\r\n            500,\r\n            statusText,\r\n            response\r\n          )\r\n        );\r\n        break;\r\n      case 502:\r\n        reject(\r\n          new FetchError(\r\n            502 +\r\n            \" - Bad Gateway: The server, while acting as a gateway or proxy, received an invalid response from the upstream server.\",\r\n            502,\r\n            statusText,\r\n            response\r\n          )\r\n        );\r\n        break;\r\n      case 503:\r\n        reject(\r\n          new FetchError(\r\n            503 +\r\n            \" - Service Unavailable: The server is currently unavailable, often due to maintenance or overloading.\",\r\n            503,\r\n            statusText,\r\n            response\r\n          )\r\n        );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * jcall request chaining mechanisme\r\n   * @type {jcallMapControl}\r\n   */\r\n  let control = {\r\n    type: useXHR === true ? \"XHR\" : FETCH_SUPPORT === true ? \"FETCH\" : \"XHR\",\r\n    progress: function () { },\r\n    setHeaders: function (headers) {\r\n      let res = {};\r\n\r\n      // setting some values\r\n      if (\r\n        headers.accept &&\r\n        [\r\n          \"application/json\",\r\n          \"application/xml\",\r\n          \"text/html\",\r\n          \"text/plain\",\r\n          \"*/*\",\r\n        ].indexOf(headers.accept) != -1\r\n      )\r\n        res.accept = headers.accept;\r\n      if (headers.cache) {\r\n        if (typeof headers.cache === \"boolean\")\r\n          if (this.type == \"XHR\")\r\n            res.cache = headers.cache == true ? \"public\" : \"no-cache\";\r\n          else res.cache = headers.cache == true ? \"force-cache\" : \"no-cache\";\r\n        else if (typeof headers.cache == \"string\")\r\n          if (\r\n            this.type == \"XHR\" &&\r\n            ([\"no-cache\", \"no-store\", \"public\", \"private\"].indexOf(\r\n              headers.cache\r\n            ) != -1 ||\r\n              headers.cache.indexOf(\"max-age=\") == 0)\r\n          )\r\n            res.cache = headers.cache;\r\n          else if (\r\n            this.type == \"FETCH\" &&\r\n            [\r\n              \"default\",\r\n              \"no-store\",\r\n              \"no-cache\",\r\n              \"reload\",\r\n              \"force-cache\",\r\n              \"only-if-cached\",\r\n            ].indexOf(headers.cache) != -1\r\n          )\r\n            res.cache = headers.cache;\r\n          else\r\n            console.warn(\r\n              \"You are using inproperiate values for ``cache`` attribute!\"\r\n            );\r\n      }\r\n\r\n      if (headers.cookie) res.cookie = headers.cookie;\r\n      if (headers.referer) res.referer = headers.referer;\r\n      if (headers.origin) res.origin = headers.origin;\r\n      if (headers.lang) res.lang = headers.lang;\r\n      if (headers.authorize) res.authorize = headers.authorize;\r\n      if (typeof headers.frame === \"boolean\")\r\n        res.frame = headers.frame === true ? \"SAMEORIGIN\" : \"DENY\";\r\n      if (headers.nosniff === true) res.nosniff = headers.nosniff;\r\n      if (headers.contentType) res.contentType = headers.contentType;\r\n      request.headers = res;\r\n      return this;\r\n    },\r\n    launch: function (data, dontUsePreventer) {\r\n      const { headers } = request;\r\n      let contentType = request.headers.contentType;\r\n      let result = {\r\n        result: null,\r\n        response: null,\r\n        headers: null,\r\n        contentType: null,\r\n      };\r\n\r\n      if (dontUsePreventer !== true && jcall.preventer) jcall.preventer.open();\r\n      return new Promise((res, rej) => {\r\n        let _this = this;\r\n        // deciding the way to send data\r\n        if (!(data instanceof FormData)) {\r\n          if (typeof data === \"string\") contentType = \"text/plain\";\r\n          else if (isObjectLiteral(data) === true) {\r\n            contentType = \"application/json\";\r\n            data = JSON.stringify(data);\r\n          } else {\r\n            // default is none to be set by the browser\r\n          }\r\n        }\r\n\r\n        if (this.type === \"XHR\") {\r\n          // ---------- SENDING XMLHttpRequest\r\n          let xhr = new XMLHttpRequest();\r\n          this.xhr = xhr;\r\n          xhr.open(request.method || \"post\", request.api);\r\n          xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n\r\n          xhr.upload.onprogress = function (e) {\r\n            e.percent = (e.loaded / e.total) * 100;\r\n            if (typeof _this.progress == \"function\") _this.progress(e);\r\n          }\r\n          // some properties\r\n          if (typeof request.credentials == \"boolean\")\r\n            xhr.withCredentials = request.credentials;\r\n          xhr.timeout = request.timeout;\r\n          xhr.responseType = \"json\";\r\n\r\n          // some headers\r\n          if (request.csrf) xhr.setRequestHeader(\"X-CSRF-TOKEN\", request.csrf);\r\n          if (contentType) xhr.setRequestHeader(\"Content-Type\", contentType);\r\n          if (headers.accept) xhr.setRequestHeader(\"Accept\", headers.accept);\r\n          if (headers.cache)\r\n            xhr.setRequestHeader(\"Cache-Control\", headers.cache);\r\n          if (headers.cookie) xhr.setRequestHeader(\"Cookie\", headers.cookie);\r\n          if (headers.referer) xhr.setRequestHeader(\"Referer\", headers.referer);\r\n          if (headers.origin) xhr.setRequestHeader(\"Origin\", headers.origin);\r\n          if (headers.lang)\r\n            xhr.setRequestHeader(\"Accept-Language\", headers.lang);\r\n          if (headers.authorize)\r\n            xhr.setRequestHeader(\"Authorization\", headers.authorize);\r\n          if (headers.frame)\r\n            xhr.setRequestHeader(\"X-Frame-Options\", headers.frame);\r\n          if (headers.nosniff === true)\r\n            xhr.setRequestHeader(\"X-Content-Type-Options\", \"nosniff\");\r\n\r\n          xhr.onreadystatechange = function (e) {\r\n            if (this.readyState == 4) {\r\n              result.headers = getHeaders(this.getAllResponseHeaders());\r\n              if (jcall.preventer) jcall.preventer.close();\r\n              if (this.status == 200)\r\n                try {\r\n                  result.result = JSON.parse(this.response);\r\n                  result.response = this.response;\r\n                  res(result);\r\n                } catch (e) {\r\n                  rej(\"ServerSide Error\", this.responseText, this, e);\r\n                }\r\n              else {\r\n                endStatus(\r\n                  this.status,\r\n                  this.statusText,\r\n                  this.response,\r\n                  rej,\r\n                  res\r\n                );\r\n              }\r\n            }\r\n          };\r\n          xhr.onerror = function (e) {\r\n            if (jcall.preventer) jcall.preventer.close();\r\n            rej(\"error\", e, this);\r\n          };\r\n          xhr.ontimeout = function (e) {\r\n            if (jcall.preventer) jcall.preventer.close();\r\n            rej(\"timeout\", e, this);\r\n          };\r\n          xhr.onabort = function (e) {\r\n            if (jcall.preventer) jcall.preventer.close();\r\n            rej(\"abort\", e, this);\r\n          };\r\n          xhr.onprogress = function (e) {\r\n            e.percent = (e.loaded / e.total) * 100;\r\n            if (typeof _this.progress == \"function\") _this.progress(e);\r\n          };\r\n\r\n          xhr.send(data);\r\n        } else {\r\n          // ---------- FETCH request\r\n          let timeoutId;\r\n          if (request.timeout != 0 && request.timeout != 0) {\r\n            timeoutId = setTimeout(function () {\r\n              if (jcall.preventer) jcall.preventer.close();\r\n              _this.abort();\r\n            }, request.timeout);\r\n          }\r\n          request.body = data;\r\n          request.signal = abortController.signal;\r\n          request.credentials =\r\n            request.credentials === true ? \"include\" : \"omit\";\r\n          if (contentType) request.headers[\"Content-Type\"] = contentType;\r\n          if (request.headers.authorize)\r\n            request.headers[\"Authorization\"] = request.headers.authorize;\r\n          if (request.csrf) request.headers[\"X-CSRF-TOKEN\"] = request.csrf;\r\n\r\n          request.cache = fetch(request.api, request)\r\n            .then(async (response) => {\r\n              const { ok, status, statusText, type, headers } = response;\r\n              // clearing timeout\r\n              clearTimeout(timeoutId);\r\n              if (jcall.preventer) jcall.preventer.close();\r\n              if (!ok) {\r\n                endStatus(status, statusText, await response.json(), rej, res);\r\n                return;\r\n              }\r\n              let contentType = headers.get(\"Content-Type\").split(\";\")[0];\r\n              result[\"headers\"] = getHeaders(headers);\r\n              result[\"contentType\"] = contentType;\r\n              result[\"response\"] = response;\r\n\r\n              if (contentType.includes(\"application/json\")) {\r\n                result[\"result\"] = await response.json();\r\n                return res(result);\r\n              } else if (\r\n                contentType.includes(\"text/html\") ||\r\n                contentType.includes(\"text/plain\")\r\n              ) {\r\n                result[\"result\"] = await response.text();\r\n                return res(result);\r\n              } else if (\r\n                contentType.includes(\"image\") ||\r\n                contentType.includes(\"application/pdf\")\r\n              )\r\n                return response.blob();\r\n              else return response.arrayBuffer();\r\n            })\r\n            .then(async (data) => {\r\n              if (data instanceof Blob) {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onloadend = () => {\r\n                  res(reader.result);\r\n                };\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              if (jcall.preventer) jcall.preventer.close();\r\n              clearTimeout(timeoutId);\r\n              // internet connection or CORS error\r\n              if (e.name === \"AbortError\") return rej(\"timeout\");\r\n\r\n              rej(\"error\", e);\r\n            });\r\n        }\r\n      }).finally((res) => {\r\n        if (jcall.after) jcall.after(res);\r\n      });\r\n    },\r\n    abort: function (msg) {\r\n      if (this.request.type == \"XHR\") {\r\n        this.xhr.abort();\r\n      } else abortController.abort(msg);\r\n    },\r\n  };\r\n\r\n  // sealing so no modifications or adding any attributes is possible anymore\r\n  control = Object.seal(control);\r\n\r\n  return control;\r\n}\r\n\r\n/**\r\n * Cross-Site Request Forgery token used to avoid the danger of this attack.\r\n * If defined will be included within each request.\r\n * @type {String}\r\n */\r\njcall.csrf = null; // used in each jcall call if defined\r\n\r\n/**\r\n * Authorization token used to allow access for your API, when secured within\r\n * login system. Read more about it!\r\n * If defined will be included within each request.\r\n * @type {String}\r\n */\r\njcall.authorization = null; // used in each jcall call if defined\r\n\r\n/**\r\n * An after callback will be executed after all requests.\r\n * you can use this to automate csrf cycle configuration!\r\n */\r\njcall.after = local_noop;\r\n\r\n/**\r\n * Used to prevent user interactions while request is being handled\r\n * server side. the prevent element must contain this functions\r\n *  - .open() : to open/display the preventer\r\n *  - .close() : to close/hide the preventer\r\n * @type {HTMLDivElement}\r\n */\r\njcall.preventer = null;\r\n\r\n/**\r\n * Powerfull function allows you to convert a regular submitable form into an jcall based\r\n * call, offering a customizable interface for maximum creativity and flex control!\r\n *\r\n * @param {HTMLFormElement} form the form to jcallify\r\n * @param {Object} options [Optional] options\r\n */\r\njcall.jcallify = function (form, options) {\r\n  let getAPI = null,\r\n    getDATA = null,\r\n    errorCb = local_noop,\r\n    successCb = local_noop;\r\n  let handle = {\r\n    /**\r\n     * Define a function that get a custom API/url(of the request) trick for more customized experience\r\n     * @param {() => (form: HTMLFormElement, api: String)} cb\r\n     */\r\n    api: function (cb) {\r\n      getAPI = cb;\r\n      return this;\r\n    },\r\n    /**\r\n     * Define a function that get a custom data object\r\n     * @param {() => (form: HTMLFormElement, data: FormData)} cb\r\n     */\r\n    data: function (cb) {\r\n      getDATA = cb;\r\n      return this;\r\n    },\r\n    /**\r\n     * Define a handler function\r\n     * @param {function} cb\r\n     */\r\n    success: function (cb) {\r\n      successCb = cb;\r\n      return this;\r\n    },\r\n    /**\r\n     * Define error handler function\r\n     * @param {function} cb\r\n     */\r\n    error: function (cb) {\r\n      errorCb = cb;\r\n      return this;\r\n    },\r\n  };\r\n  if (form instanceof HTMLFormElement) {\r\n    // let's make sure the form is setup well\r\n\r\n    form.addEventListener(\"submit\", function (e) {\r\n      e.preventDefault(); // preventing default behavior\r\n      let method = form.getAttribute(\"method\") || \"post\";\r\n\r\n      // preparing the API\r\n      let api = this.getAttribute(\"action\");\r\n      if (getAPI != null) api = getAPI(this, api);\r\n      if (!api)\r\n        throw new Error(\r\n          \"Bad setup!\\nplease include the action attribute in the form\"\r\n        );\r\n\r\n      // preparing the Data\r\n      let data = new FormData(this);\r\n      if (getDATA != null) data = getDATA(this, data);\r\n\r\n      jcall(api, {\r\n        method,\r\n      })\r\n        .launch(data)\r\n        .then((res) => {\r\n          successCb(res);\r\n        })\r\n        .catch((e) => errorCb(e));\r\n    });\r\n  }\r\n\r\n  return handle;\r\n};\r\n\r\n// globally exposed\r\nwindow.jcall = jcall;\r\nexport default jcall;"],"names":["METHODS","local_noop","FETCH_SUPPORT","fetch","FetchError","Error","constructor","message","status","statusText","response","super","this","name","stack","getHeaders","object","headers","trim","split","forEach","line","parts","header","shift","value","join","toLowerCase","entries","key","jcall","api","options","method","timeout","credentials","csrf","useXHR","preventer","div","document","createElement","style","backgroundColor","position","zIndex","left","top","width","height","display","open","close","abortController","AbortController","request","indexOf","signal","endStatus","reject","resolve","authorization","control","type","progress","setHeaders","res","accept","cache","console","warn","cookie","referer","origin","lang","authorize","frame","nosniff","contentType","launch","data","dontUsePreventer","result","Promise","rej","_this","obj","FormData","Object","prototype","toString","call","JSON","stringify","xhr","XMLHttpRequest","setRequestHeader","upload","onprogress","e","percent","loaded","total","withCredentials","responseType","onreadystatechange","readyState","getAllResponseHeaders","parse","responseText","onerror","ontimeout","onabort","send","timeoutId","setTimeout","abort","body","then","async","ok","clearTimeout","json","get","includes","text","blob","arrayBuffer","Blob","reader","FileReader","readAsDataURL","onloadend","catch","finally","after","msg","seal","jcallify","form","getAPI","getDATA","errorCb","successCb","handle","cb","success","error","HTMLFormElement","addEventListener","preventDefault","getAttribute","window"],"mappings":"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"}